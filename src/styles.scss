@use 'sass:map';
@use 'sass:color';
@use 'styles/variables' as *;
@use 'styles/mixins' as *;

/* You can add global styles to this file, and also import other style files */

:root {
  --primary-color: #{map.get(map.get($theme-colors, 'light'), 'primary')};
  --secondary-color: #{map.get(map.get($theme-colors, 'light'), 'secondary')};
  --background-color: #{map.get(map.get($theme-colors, 'light'), 'background')};
  --text-color: #{map.get(map.get($theme-colors, 'light'), 'text')};
  --border-color: #{map.get(map.get($theme-colors, 'light'), 'border')};
  --card-bg: #{map.get(map.get($theme-colors, 'light'), 'card-bg')};
  --input-bg: #{map.get(map.get($theme-colors, 'light'), 'input-bg')};
  --success-color: #4caf50;
  --error-color: #f44336;
  --surface-color: #ffffff;
  --hover-color: #f5f5f5;
  --shadow-color: rgba(0, 0, 0, 0.1);
}

body.dark-theme {
  --primary-color: #{map.get(map.get($theme-colors, 'dark'), 'primary')};
  --secondary-color: #{map.get(map.get($theme-colors, 'dark'), 'secondary')};
  --background-color: #{map.get(map.get($theme-colors, 'dark'), 'background')};
  --text-color: #{map.get(map.get($theme-colors, 'dark'), 'text')};
  --border-color: #{map.get(map.get($theme-colors, 'dark'), 'border')};
  --card-bg: #{map.get(map.get($theme-colors, 'dark'), 'card-bg')};
  --input-bg: #{map.get(map.get($theme-colors, 'dark'), 'input-bg')};
  --surface-color: #1e1e1e;
  --hover-color: #2d2d2d;
  --shadow-color: rgba(0, 0, 0, 0.3);
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: $font-family-base;
  background-color: var(--background-color);
  color: var(--text-color);
  line-height: 1.6;
  transition: background-color 0.3s, color 0.3s;
}

.container {
  width: 100%;
  max-width: map.get($breakpoints, 'xl');
  margin: 0 auto;
  padding: map.get($spacers, '3');
}

app-log-modal {
  .modal-content {
    border-radius: 6px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  }
  
  .modal-header {
    cursor: move;
    background-color: #f8f9fa;
    border-bottom: 1px solid #eaeaea;
  }
}

h1, h2, h3, h4, h5, h6 {
  margin-bottom: map.get($spacers, '3');
  font-weight: 500;
}

button {
  padding: map.get($spacers, '2') map.get($spacers, '3');
  border: none;
  border-radius: map.get($border-radius, 'sm');
  cursor: pointer;
  font-size: map.get($font-sizes, 'base');
  
  &.primary {
    @include button-variant(map.get($colors, 'primary'), map.get($colors, 'secondary'));
  }
  
  &.secondary {
    $secondary-color: map.get($colors, 'secondary');
    @include button-variant($secondary-color, color.adjust($secondary-color, $lightness: -10%));
  }
  
  &:disabled {
    opacity: 0.7;
    cursor: not-allowed;
  }
}

input {
  width: 100%;
  padding: map.get($spacers, '2');
  border: 1px solid var(--border-color);
  border-radius: map.get($border-radius, 'sm');
  font-size: map.get($font-sizes, 'base');
  background-color: var(--input-bg);
  color: var(--text-color);
  
  &:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 2px rgba(var(--primary-color), 0.2);
  }
}

.card {
  @include card-container;
  background-color: var(--card-bg);
  color: var(--text-color);
  border-color: var(--border-color);
  box-shadow: 0 2px 4px var(--shadow-color);
}

.error-message {
  color: map.get($colors, 'error');
  font-size: map.get($font-sizes, 'sm');
  margin-top: map.get($spacers, '2');
}

.success-message {
  color: map.get($colors, 'success');
  font-size: map.get($font-sizes, 'sm');
  margin-top: map.get($spacers, '2');
}
